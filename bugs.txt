bugs

-sometimes that JAIN SIP asynctask race condition is triggered in responding to OPTIONS 
	- but who really cares?
-excess BYEs seem to be sent by the server, but they donâ€™t seem to cause any problems
-messed up lock handling for setting up new calls
-need to re-register after expiration (set alarm)
-probably don't need to wait on get() any more
	-actually, this caught a bug, sort of. if we are going to wait on get(), we should just make sending SIP messages synchronous and get rid of AsyncTask. otherwise, don't wait at all
-non-printing characters are not always received correctly (cf some weird bad chars sent as newlines from SipCon1)
-@todo Backspace handling in sending messages
-doze/standby (this is a way future problem)
-sipxcom often decides to send us 404 and 408, is this our fault? I doubt it
-taking word suggestion of built-in keyboard popup is fatal - how to cause this to appear? i don't see that popup any more
-observed a crash declining a call after receiving a DialogTerminated message, or maybe it was in responding to a second incoming call when one was already incoming?
	-then after this crash, java.lang.IllegalStateException: Singleton SipClient has not been initialized yet - init() before getInstance()
-occasional text deletion problem that leaves too many chars intact? very hard to trigger, POSSIBLY fixed by removing \uFEFF from text upon every addition
-trying to send a payload more than 512 chars crashes RtpTextTransmitter (this includes redundant packets with multiple messages)
-handle in-dialog INVITEs

UI deficiencies
-report errors via dialogs
-log in RegistrationActivity is probably not useful
-entire RegistrationActivity should be replaced with phone book or recent calls or something
-make sure app continues running in bg - consider adding a service?
-should vibrate on incoming call
-use display name, not just sip uri
-should wake screen when call comes in
-landscape mode in call doesn't look good

Other limitations
-NAT
-IPv6
-no tests